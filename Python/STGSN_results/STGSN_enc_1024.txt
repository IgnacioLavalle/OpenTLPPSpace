data_name: SMP22to95, max_thres: 2.0, win_size: 2, enc_dims: [32, 1024, 1024, 1024], theta: 0.1, dropout_rate: 0.2,  batch_size: 1, num_epochs: 250, num_val_snaps: 3, num_test_snaps: 3, num_train_snaps: 22, lr_val: 0.0001, weight_decay_val: 0.0001
Traceback (most recent call last):
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/Python/STGSN_SMP.py", line 460, in <module>
    main()
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/Python/STGSN_SMP.py", line 174, in main
    adj_est = model(sup_list, feat_list, col_sup_tnr, feat_tnr, num_nodes)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/Python/STGSN/modules.py", line 34, in forward
    adj_est = self.dec(dyn_emb, num_nodes)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/ilavalle/tesisProductSpace/OpenTLP/OpenTLPPSpace/Python/STGSN/modules.py", line 121, in forward
    cat_emb = torch.cat((cur_emb, dyn_emb), dim=1)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 22.00 MiB. GPU 0 has a total capacity of 23.69 GiB of which 7.75 MiB is free. Including non-PyTorch memory, this process has 23.68 GiB memory in use. Of the allocated memory 23.30 GiB is allocated by PyTorch, and 83.77 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
